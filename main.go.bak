package main

import (
	"fmt"
	"log"
	"net/http"
	"strconv"
)

func main() {

	//router
	mux := http.NewServeMux()
	mux.HandleFunc("/", home)
	mux.HandleFunc("/snippet/view", snippetView)
	mux.HandleFunc("/snippet/create", snippetCreate)

	//server listen
	log.Print("starting server on 4000")
	err := http.ListenAndServe(":4000", mux)
	log.Fatal(err)
}

func home(resp http.ResponseWriter, req *http.Request) {
	if req.URL.Path != "/" {
		http.NotFound(resp, req)
		return
	}

	resp.Write([]byte("Hello"))
}

func snippetView(resp http.ResponseWriter, req *http.Request) {
	id, err := strconv.Atoi(req.URL.Query().Get("id"))

	if err != nil || id < 1 {
		http.NotFound(resp, req)
		return
	}

	fmt.Fprintf(resp, "Display a specific snippet... %d", id)
}

func snippetCreate(resp http.ResponseWriter, req *http.Request) {
	if req.Method != "POST" {
		resp.Header().Set("Allow", "POST")

		//resp.WriteHeader(405)
		//resp.Write([]byte("Method Not Allowed"))
		http.Error(resp, "Method Not Allowed", http.StatusMethodNotAllowed)

		return
	}
	resp.Write([]byte("Create a new snippet..."))
}
